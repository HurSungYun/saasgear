version: "3"

services:
  db:
    container_name: saas_mysql_db
    build:
      context: .
      dockerfile: ./systems/docker-services/mysql/Dockerfile
    ports: 
      - "33061:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: saas
      MYSQL_PASSWORD: root
    networks:
      - saas-network
    
  adminer:
    container_name: saas_adminer
    build: 
      context: .
      dockerfile: ./systems/docker-services/adminer/Dockerfile
    ports:
      - "8091:8080"
    networks:
      - saas-network
  api:
    container_name: saas_api
    build:
      context: .
      dockerfile: ./systems/docker-services/api/Dockerfile
    tty: true
    ports:
      - "5001:5000"
    depends_on:
      - db
      - adminer
    environment:
      - DB_HOST=db
      - DB_NAME=saas
      - DB_USER=root
      - DB_PASSWORD=root
    volumes:
      - ./api:/var/www/app/api
      - /var/www/app/api/node_modules
    networks:
      - saas-network
  frontend:
    container_name: saas_front_end
    build:
      context: .
      dockerfile: ./systems/docker-services/front-end/Dockerfile
    tty: true
    ports:
      - "3002:3000"
    volumes:
      - ./app:/var/www/app/fe
      - /var/www/app/fe/node_modules
    networks:
      - saas-network
  landing:
    container_name: saas_landing
    build:
      context: .
      dockerfile: ./systems/docker-services/landing/Dockerfile
    tty: true
    ports:
      - "4001:4000"
    volumes:
      - ./landing:/var/www/app/landing
      - /var/www/app/landing/node_modules
    networks:
      - saas-network
  nginx:
    container_name: saas_nginx
    build:
      context: .
      dockerfile: ./systems/docker-services/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./systems/docker-services/nginx/conf:/etc/nginx/site-availables
    networks:
      - saas-network

networks:
  saas-network:
    driver: bridge
